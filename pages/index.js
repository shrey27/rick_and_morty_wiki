import Head from 'next/head';
import React, { useState, useEffect } from 'react';
import Search from '../components/Search/Search';
import Cards from '../components/Card/Cards';
import Loading from '../components/Card/Cards';
import Error from '../components/Card/Cards';
import PaginationBar from '../components/Pagination/Pagination';
import Filter from '../components/Filter/Filter';
import Navbar from '../components/Navbar/Navbar';
import { Box, Flex } from 'rebass';
import { useSelector, useDispatch } from 'react-redux';
import { fetchCall } from '../Redux/actionCreator';

let PAGE_API = `https://rickandmortyapi.com/api/character/`;

export default function Home() {
  let dispatch = useDispatch();
  let fetched = useSelector((state) => state.apiResp);
  let { fetchedData, loading, error } = fetched;

  // let error = useSelector((state) => state.apiResp.error);
  // let [fetchedData, updateFetchedData] = useState(posts);
  // let { info, results = [] } = fetchedData;

  let [pageNumber, updatePageNumber] = useState(1);
  let [searchTerm, setSearchTerm] = useState('');
  let [status, setStatus] = useState('');
  let [gender, setGender] = useState('');
  let [species, setSpecies] = useState('');

  let api =
    PAGE_API +
    `?page=${pageNumber}&name=${searchTerm}&status=${status}&gender=${gender}&species=${species}`;

  useEffect(() => {
    dispatch(fetchCall(api));
  }, [dispatch, api]);

  // useEffect(() => {
  //   (async function () {
  //     let data = await fetch(api)
  //       .then((res) => res.json())
  //       .catch((err) => console.log(err));
  //     updateFetchedData(data);
  //   })();
  // }, [api]);

  return (
    <Box>
      <Head>
        <title>Rick and Morty Wiki</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/logo.jpg' />
      </Head>
      <Navbar />
      <Search setSearchTerm={setSearchTerm} />
      <Flex
        flexDirection={['column', 'row']}
        mx={['auto']}
        mt={['0', '4']}
        width={'85%'}
      >
        <Box width={['100%', '25%']}>
          <Filter
            setGender={setGender}
            setStatus={setStatus}
            setSpecies={setSpecies}
            updatePageNumber={updatePageNumber}
          />
        </Box>
        <Box mt={['4', '1']} pb={4} width={['100%', '75%']}>
          {error ? (
            <Error error={error} />
          ) : (
            loading ? <Loading/> : <Cards results={fetchedData?.results} />
          )}
          <PaginationBar
            info={fetchedData?.info}
            pageNumber={pageNumber}
            updatePageNumber={updatePageNumber}
          />
        </Box>
      </Flex>
    </Box>
  );
}

// export async function getStaticProps() {
//   let data = await fetch(PAGE_API).then((res) => res.json());
//   return {
//     props: {
//       posts: data,
//     },
//   };
// }
